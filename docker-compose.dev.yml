version: '3.8'

services:
  localstack:
    image: localstack/localstack:latest
    environment:
      - SERVICES=lambda,dynamodb,s3,apigateway,cognito,cloudformation,iam,sts,logs
      - EDGE_PORT=4566
      - AWS_DEFAULT_REGION=us-east-1
    ports:
      - "4566:4566"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      - gem-trust-network
  # Frontend Service (Development)
  frontend-dev:
    build:
      context: ./gem-trust-platform-web
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
    volumes:
      - ./gem-trust-platform-web:/app
      - /app/node_modules
      - /app/.next
    depends_on:
      - backend-dev
    networks:
      - gem-trust-network
    command: npm run dev

  # Backend Service (Development)
  backend-dev:
    build:
      context: ./gem-trust-platform-api
      dockerfile: Dockerfile.dev
    ports:
      - "3001:3000"
    environment:
      - NODE_ENV=development
      - AWS_ENDPOINT_URL=http://localstack:4566
      - AWS_REGION=us-east-1
      - LOCALSTACK_HOSTNAME=localstack
    volumes:
      - ./gem-trust-platform-api:/app
      - /app/node_modules
    networks:
      - gem-trust-network
    depends_on:
      - localstack

  # SAM Local API (runs Lambda locally using Docker)
  sam-local:
    image: amazon/aws-sam-cli:latest
    working_dir: /app
    command: sh -lc "sam build && sam local start-api --env-vars sam-env.local.json --port 3001 --host 0.0.0.0"
    ports:
      - "3001:3001"
    environment:
      - AWS_ACCESS_KEY_ID=test
      - AWS_SECRET_ACCESS_KEY=test
      - AWS_SESSION_TOKEN=test
      - AWS_DEFAULT_REGION=us-east-1
      - AWS_ENDPOINT_URL=http://localstack:4566
      - LOCALSTACK_HOSTNAME=localstack
    volumes:
      - ./gem-trust-platform-api:/app
      - /var/run/docker.sock:/var/run/docker.sock
    depends_on:
      - localstack
    networks:
      - gem-trust-network

networks:
  gem-trust-network:
    driver: bridge
